name: Debian with Docker

on:
  schedule: 
    - cron: '30 1 * * *'
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  docker:
    name: Debian ${{ matrix.debian_version }} with Docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        debian_version:
          - "bullseye"
          - "bookworm"
        include:
          - debian_version: "bullseye"
            image_tag: "latest"
          - debian_version: "bookworm"
            image_tag: "testing"
    steps:
      - uses: actions/checkout@v3
      - name: Generate certificates
        run: |
          cd docker/
          ./generate_certs.sh
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Debian with Docker
        uses: docker/build-push-action@v3
        with:
          context: docker/
          platforms: linux/amd64,linux/arm64/v8
          build-args: |
            BASE_IMAGE=debian:${{ matrix.debian_version }}-slim
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            nyvanga/docker:${{ matrix.image_tag }}
            nyvanga/docker:${{ matrix.debian_version }}

  docker-openjdk:
    name: OpenJDK ${{ matrix.openjdk_version }}
    runs-on: ubuntu-latest
    needs:
      - docker
    strategy:
      matrix:
        debian_version:
          - "bullseye"
          - "bookworm"
        include:
          - debian_version: "bullseye"
            tag_prefix: ""
          - debian_version: "bookworm"
            tag_prefix: "testing-"
        openjdk_version:
          - "11"
          - "17"
    steps:
      - uses: actions/checkout@v3
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push OpenJDK
        uses: docker/build-push-action@v3
        with:
          context: docker-openjdk/
          platforms: linux/amd64,linux/arm64/v8
          build-args: |
            FROM_IMAGE=nyvanga/docker:${{ matrix.debian_version }}
            OPENJDK_VERSION=${{ matrix.openjdk_version }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            nyvanga/docker:${{ matrix.tag_prefix }}openjdk-${{ matrix.openjdk_version }}
            nyvanga/docker:${{ matrix.debian_version }}-openjdk-${{ matrix.openjdk_version }}
